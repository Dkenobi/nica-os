header {
  display: flex;
  place-content: space-between;
  place-items: center;
  padding: map_get($padding, extra-big);

  @include respond-to('small') {
    padding: map_get($padding, normal);
    position: fixed;
    top: 0;
    left: 0;
    background-color: $surface-color;
    color: $on-surface-color;
    z-index: 90001;
    width: calc(100% - #{ map_get($padding, normal) * 2 });
  }

  .icon {
    width: 3.75rem;
    height: 3.75rem;

    @include respond-to('small') {
      width: 1rem;
      height: 1rem;
    }
  }

  .menu {
    display: inline-flex;
    position: relative;

    @include respond-to('small') {
      .menu-inline {
        display: none;
      }

      .menu-mobile-toggle {
        display: inline-flex;
        width: 2rem;
        height: 2rem;
        position: relative;

        &:before {
          content: "";
          position: absolute;
          right: 0;
          top: .6rem;
          display: inline-block;
          background-color: $on-surface-color;
          width: 1rem;
          height: .1rem;
        }
        &:after {
          content: "";
          right: 0;
          bottom: .6rem;
          position: absolute;
          display: inline-block;
          background-color: $on-surface-color;
          width: .75rem;
          height: .1rem;
        }
      }
    }

    &-mobile-toggle {
      display: none;
    }

    &-inline {
      display: inline-flex;
    }

    &-item {
      margin-left: map_get($padding, medium);
      font-size: map_get($fontSizes, normal);
      cursor: pointer;
      opacity: .25;
      position: relative;
      transition: opacity .25s ease-out;


      &:hover {
        opacity: .75;
      }

      &-active {
        opacity: 1;

        &:after {
          content: "";
          display: block;
          position: absolute;
          width: 0.3125rem;
          height: 0.3125rem;
          border-radius: 50px;
          background-color: $primary-color;
          bottom: -#{map_get($padding, normal)};
          left: calc(50% - 0.15625rem);
        }
      }
    }
  }
}

.hero-content {
  padding: 0 map_get($padding, extra-big) map_get($padding, extra-big)*2 map_get($padding, extra-big);
  margin-top: map_get($padding, medium);
  display: grid;
  grid-template-columns: 60% 1fr;
  column-gap: map_get($padding, big);
  position: relative;

  @include respond-to('small') {
    margin-top: map_get($padding, medium);
    padding: map_get($padding, medium);
    grid-template-columns: 100%;
  }

  #nica-cutted {
    position: absolute;
    bottom: -28rem;
    right: calc(50% - 15.625rem);
    width: 31.25rem;
    height: 59.375rem;
    z-index: -1;
    background-image: url("assets/nica-cutted.png");
    background-position: top;
    background-repeat: no-repeat;
    background-size: cover;
    animation-delay: 1s;
  }

  h1 {
    font-weight: bold;
    font-size: map_get($fontSizes, extra-big);
    margin-top: 0;
    margin-bottom: map_get($padding, big);

    @include respond-to('small') {
      font-size: map_get($fontSizes, big);
      margin-bottom: map_get($padding, normal);
    }
  }

  &-left {
    &-icons {
      .icon {
        width: 1.5625rem;
        height: 1.5625rem;
        margin-right: map_get($padding, medium);
        display: inline-flex;
      }

      @include respond-to('small') {
        margin-bottom: map_get($padding, medium);
      }
    }
  }
}

.box {
  display: flex;
  flex-direction: column;
  max-width: 18.75rem;

  @include respond-to('small') {
    max-width: 100%;
  }

  &-intro {
    font-size: map_get($fontSizes, small);
    opacity: .5;
    user-select: none;
  }

  &-title {
    font-size: map_get($fontSizes, big);
    padding: map_get($padding, medium) 0;
    user-select: none;

    @include respond-to('small') {
      font-size: map_get($fontSizes, medium);
    }
  }

  &-content {
    padding-bottom: map_get($padding, small);
    font-size: map_get($fontSizes, normal);
    opacity: .25;
    user-select: none;

    @include respond-to('small') {
      opacity: 1;
    }
  }

  &-link {
    display: inline-flex;

    a {
      display: inline-flex;
      place-content: center;
      padding: map_get($padding, normal) 0;
      color: $primary-color;
      text-decoration: none;
      text-underline: none;
      opacity: .5;
      transition: opacity .25s ease-out;

      .icon {
        display: block;
        width: 25px;
        height: 12px;
        margin-left: map_get($padding, normal);
        transition: transform .25s ease-out;
      }

      &:hover {
        opacity: 1;

        .icon {
          transform: translateX(1rem);
        }
      }
    }
  }

  &-counter {
    display: inline-flex;
    place-content: center;
    place-items: center;
    margin-right: map_get($padding, medium);

    h2 {
      font-size: map_get($fontSizes, big);
      color: $primary-color;
      margin: 0 map_get($padding, normal) 0 0;
    }

    p {
      font-size: map_get($fontSizes, small);
      font-weight: lighter;
    }
  }
}

.services {
  position: relative;
  padding: map_get($padding, extra-big);
  background-color: $surface-color;
  color: $on-surface-color;
  z-index: 10;

  @include respond-to('small') {
    padding: map_get($padding, medium);
  }

  &-boxes {
    display: flex;
    place-content: space-between;

    @include respond-to('small') {
      flex-direction: column;

      .box + .box {
        margin-top: map_get($padding, medium);
      }
    }
  }

  &:before {
    content: "";
    position: absolute;
    left: -50vw;
    top: 0;
    background-color: $surface-color;
    width: 150vw;
    height: 100%;
    z-index: -1;
  }

  &-resume {
    display: grid;
    grid-template-columns: auto auto auto;
    column-gap: 10rem;
    margin-top: map_get($padding, big);
    margin-bottom: -9rem;
    @include respond-to('small') {
      margin: map_get($padding, medium) 0;
      grid-template-columns: 100%;
      row-gap: map_get($padding, medium);
    }
    &-box {
      padding: map_get($padding, normal);
      background-color: $on-surface-color;
      color: $surface-color;
      border-radius: 5px;
      display: grid;
      place-content: center;
      align-items: center;
      grid-template-areas: "icon title" "icon subtitle";
      row-gap: map_get($padding, small);
      column-gap: map_get($padding, normal);

      &.main {
        background-color: $primary-color;
        color: $on-primary-color;
      }

      .icon {
        grid-area: icon;
        width: 1.5625rem;
        height: 1.5625rem;
        grid-row: 1/-1;
      }

      &-title {
        grid-area: title;
        font-size: map_get($fontSizes, normal);
        font-weight: bold;
      }

      &-subtitle {
        grid-area: subtitle;
        font-size: map_get($fontSizes, small);
        opacity: .5;
      }
    }
  }
}

.works {
  padding: map_get($padding, extra-big);
  display: grid;
  grid-template-columns: 50% 50%;
  column-gap: map_get($padding, medium);
  width: calc(100% - #{map_get($padding, extra-big)*2} - #{map_get($padding, medium)});

  @include respond-to('small') {
    padding: map_get($padding, medium);
    grid-template-columns: 100%;
    column-gap: 0;
    row-gap: map_get($padding, medium);
    width: calc(100% - #{map_get($padding, medium)*2});

    [class*="box"] {
      & + .works-box {
        margin-top: map_get($padding, medium) !important;
      }
    }
  }

  [class*="box"] {
    & + .works-box {
      margin-top: map_get($padding, big);
    }
  }

  &-box {
    display: flex;
    flex-direction: column;

    &-title {
      display: inline-flex;
      justify-content: space-between;
      align-items: center;
      h3 {
        margin: 0;
        font-size: map_get($fontSizes, big);

        @include respond-to('small') {
          font-size: map_get($fontSizes, medium);
          max-width: 50%;
        }
      }
    }

    &-link {
      display: inline-flex;

      a {
        display: inline-flex;
        place-content: center;
        color: $primary-color;
        text-decoration: none;
        text-underline: none;
        opacity: .5;
        transition: opacity .25s ease-out;

        .icon {
          display: block;
          width: 25px;
          height: 12px;
          margin-left: map_get($padding, normal);
          transition: transform .25s ease-out;
        }

        &:hover {
          opacity: 1;

          .icon {
            transform: translateX(1rem);
          }
        }
      }
    }

    &-tags {
      margin-top: map_get($padding, normal);
      display: inline-flex;

      span {
        color: $primary-color;
        margin-right: map_get($padding, normal);

        @include respond-to('small') {
          font-size: map_get($fontSizes, small);
        }
      }
    }

    &-image {
      width: 31.25rem;
      height: 31.25rem;
      background-size: cover !important;
      background-repeat: no-repeat !important;
      margin-top: map_get($padding, normal);
      filter: grayscale(100);
      transition: filter .25s ease-out;

      &:hover {
        filter: grayscale(0);
      }

      @include respond-to('small') {
        width: 100%;
        padding-top: 100%; /* 1:1 Aspect Ratio */
        height: auto;
        position: relative; /* If you want text inside of it */
        filter: none;
      }
    }

    &-description {
      margin-top: map_get($padding, normal);
      opacity: .5;
      font-size: map_get($fontSizes, small);
      font-weight: lighter;
    }
  }
}

.blog {
  position: relative;
  padding: map_get($padding, extra-big);
  background-color: $surface-color;
  color: $on-surface-color;
  z-index: 10;

  display: grid;
  grid-template-columns: 40% 70%;
  column-gap: map_get($padding, big);
  width: calc(100% - #{map_get($padding, extra-big)*2} - #{map_get($padding, big)});

  @include respond-to('small') {
    padding: map_get($padding, medium);
    grid-template-columns: 100%;
    row-gap: map_get($padding, medium);
    width: calc(100% - #{map_get($padding, medium)*2});
  }

  &:before {
    content: "";
    position: absolute;
    left: -50vw;
    top: 0;
    background-color: $surface-color;
    width: 150vw;
    height: 100%;
    z-index: -1;
  }

  &-list {
    display: flex;
    flex-direction: column;
    max-height: 30.9rem;
    overflow-y: scroll;
    padding-right: map_get($padding, normal);

    @include respond-to('small') {
      max-height: unset;
      overflow: hidden;
    }

    &::-webkit-scrollbar {
      width: .5rem;
    }

    &::-webkit-scrollbar-track {
      -webkit-box-shadow: none;
      border-radius: .5rem;
      background-color: $background-color;
    }

    &::-webkit-scrollbar-thumb {
      border-radius: .5rem;
      -webkit-box-shadow: none;
      background-color: $primary-color;
    }

    &-item {
      display: inline-flex;
      flex-direction: column;

      & + .blog-list-item {
        margin-top: map_get($padding, medium);
      }

      &-date {
        color: $primary-color;
        font-size: map_get($fontSizes, small);
      }

      &-title {
        h3 {
          font-size: map_get($fontSizes, big);
          margin: map_get($padding, medium) 0;

          @include respond-to('small') {
            font-size: map_get($fontSizes, medium);
          }
        }
      }

      &-content {
        font-size: map_get($fontSizes, small);
        opacity: .5;

        p {
          margin: 0 0 map_get($padding, medium) 0;
        }
      }

      &-link {
        display: inline-flex;

        a {
          display: inline-flex;
          place-content: center;
          padding: map_get($padding, normal) 0;
          color: $primary-color;
          text-decoration: none;
          text-underline: none;
          opacity: .5;
          transition: opacity .25s ease-out;

          .icon {
            display: block;
            width: 25px;
            height: 12px;
            margin-left: map_get($padding, normal);
            transition: transform .25s ease-out;
          }

          &:hover {
            opacity: 1;

            .icon {
              transform: translateX(1rem);
            }
          }
        }
      }
    }
  }
}

footer {
  padding: map_get($padding, extra-big);
  display: flex;
  flex-direction: column;
  place-content: center;
  place-items: center;

  p {
    max-width: 500px;
    opacity: .5;
    margin: map_get($padding, big) 0;
    text-align: center;
  }
}
